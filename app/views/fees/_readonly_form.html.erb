<div class="well">
<%= simple_form_for @fee, html: { class: 'form-horizontal' },
  wrapper: :horizontal_form do |f| %>
  <%= f.error_notification %> 
  <div class="row">
    <div class="col-md-5">
      <%= f.input :begin_date, as: :datepicker, input_html: { readonly: 'readonly' } %>
    </div>
    <div class="col-md-5">
      <%= f.input :end_date, as: :datepicker, input_html: { readonly: 'readonly' } %>
    </div>
  </div>


<div class="row">
<div class="col-md-6 col-md-offset-6">
<table class="table table-bordered">
 <thead>
    <tr>
      <th><%= t('.sn') %></th>
      <th><%= t('.income_amount') %></th>
      <th><%= t('.percent') %></th>
      <th><%= t('.fee') %></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>￥<%= f.input_field :part_amount1 %><%= f.error :part_amount1 %></td>
      <td><%= f.input_field :percent1, class: 'percent' %>%<%= f.error :percent1 %></td>
      <td id="fee_part1"></td>
    </tr>
    <tr>
      <td>2</td>
      <td>￥<%= f.input_field :part_amount2 %></td>
      <td><%= f.input_field :percent2, class: 'percent' %>%</td>
      <td id="fee_part2"></td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <th><%= t(".summary") %></th>
      <td class="money" id="income_sum"></td>
      <td><%= f.hidden_field :income_amount %><%= f.hidden_field :fee_amount %></td>
      <td class="money" id="fee_amount"></td>
    </tr>
  </tfoot>
</table>
</div>
</div>

<table id="fee_details_table" class="table table-striped table-bordered table-hover">
  <thead>
    <tr>
      <th><%= Income.human_attribute_name(:code) %></th>
      <th><%= Income.human_attribute_name(:payer) %></th>
      <th><%= Income.human_attribute_name(:bill_date) %></th>
      <th><%= Income.human_attribute_name(:income_amount) %></th>
      <th><%= Income.human_attribute_name(:actual_amount) %></th>
      <th><%= Income.human_attribute_name(:cost_amount) %></th>
      <th><%= Income.human_attribute_name(:actual_cost_amount) %></th>
      <th style="width:230px"><%= Income.human_attribute_name(:fee_amount) %></th>
      <th><%=t '.actions', :default => t("helpers.actions") %></th>
    </tr>
  </thead>
  <tbody>
    <%= f.simple_fields_for :fee_details do |ff| %>
      <tr class="income_tr" id="tr_<%=ff.object.income.id%>">
        <td><%= ff.object.income.code %></td>
        <td><%= ff.object.income.payer.brief_name %></td>
        <td><%= ff.object.income.bill_date %></td>
        <td class="money income_amount"><%= ff.object.income.income_amount %></td>
        <td class="money"><%= ff.object.income.actual_amount %></td>
        <td class="money cost_amount"><%= ff.object.income.cost_amount %></td>
        <td class="money"><%= ff.object.income.actual_cost_amount %></td>
        <td id="fee_detail_<%=ff.object.income.id%>">
          ￥<%= ff.number_field :fee_amount %><%= ff.hidden_field :id %><%= ff.hidden_field :income_id %>
        </td>
        <td>
          <input type='checkbox' name='add_fee_detail' value='<%= ff.object.income.id %>' checked='checked'>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<% end %>
</div>

<script type="text/javascript">
;NestedAttr = {
  inputs_template : 
    '￥<input type="hidden" value="FEE_ID" name="fee[fee_details_attributes][INDEX][id]" id="fee_fee_details_attributes_INDEX_id">' +
    '<input type="hidden" value="INCOME_ID" name="fee[fee_details_attributes][INDEX][income_id]" id="fee_fee_details_attributes_INDEX_income_id">' +
    '<input type="number" name="fee[fee_details_attributes][INDEX][fee_amount]" id="fee_fee_details_attributes_INDEX_fee_amount">',
  
  destroy_template :
    '<input type="hidden" value="1" name="fee[fee_details_attributes][INDEX][_destroy]">',

  get_next_attributes_count : function() {
    var max_index = -1;
    $("input[name^='fee[fee_details_attributes]'][name$='[id]']").each(function() {
      var index = parseInt($(this).attr("name").match(/\d+/)[0]);
      if(index > max_index) max_index = index
    });
    return max_index + 1;
  },

  fee_detail_inputs : function(income_id) {
    var id_input = $("#tr_" + income_id).find("input[name^='fee[fee_details_attributes]'][name$='[id]']");
    var id_value = "";
    if(id_input && id_input.val()) {
      id_value = id_input.val();
    }
    return this.inputs_template.replace(/INDEX/g, this.get_next_attributes_count())
      .replace(/INCOME_ID/g, income_id).replace(/FEE_ID/g, id_value);
  },

  destroy_flag : function(income_id) {
    var id_input = $("#tr_" + income_id).find("input[name^='fee[fee_details_attributes]'][name$='[id]']");
    var id_value = id_input.val();
    var index = parseInt(id_input.attr("name").match(/\d+/)[0]);
    if(id_value) {
      return id_input.prop('outerHTML') + this.destroy_template.replace(/INDEX/g, index);
    } else {
      return "";
    }
  },

  add_or_destroy_fee_detail_input : function(check_box) {
    income_id = check_box.val();
    td = $("#fee_detail_" + income_id);
    if(check_box.is(':checked')) {
      td.html(this.fee_detail_inputs(income_id));
    } else {
      td.html(this.destroy_flag(income_id));
    }
  }
}

;CalculateValidator = {
  sum_income_amount : function() {
    var sum = 0;
    $(".income_tr").each(function() {
      var tr = $(this);
      if(tr.find("input[name='add_fee_detail']").is(':checked')) {
        amount = parseCurrency(tr.find(".income_amount"));
        sum += amount;
      }
    });

    $("#income_sum").html(accounting.formatMoney(sum));
    $("#fee_income_amount").val(sum);
  },

  check_income_amount : function() {
    var sum = 0;
    $("input[name^='fee[part_amount']").each(function() {
      part_amount = Number($(this).val());
      if(part_amount)
        sum += part_amount;
    }); 
    
    return sum == parseCurrency($("#income_sum"));
  },
  validate_income_amount : function() {
    var result = this.check_income_amount();
    if(result) {
      changeClassToSuccess($("#income_sum"));
      changeClassToSuccess($("input[name^='fee[part_amount']"));
    } else {
      changeClassToDanger($("#income_sum"));
      changeClassToDanger($("input[name^='fee[part_amount']"));
    }
    return result;
  },

  calculate_fee : function() {
    part_amount1 = parseNumber($("input[name='fee[part_amount1]']").val());
    percent1 = parseNumber($("input[name='fee[percent1]']").val());
    fee_part1 = part_amount1*percent1/100;
    $("#fee_part1").html(accounting.formatMoney(fee_part1));
    part_amount2 = parseNumber($("input[name='fee[part_amount2]']").val());
    percent2 = parseNumber($("input[name='fee[percent2]']").val());
    fee_part2 = part_amount2*percent2/100;
    $("#fee_part2").html(accounting.formatMoney(fee_part2));

    $("#fee_amount").html(accounting.formatMoney(fee_part1 + fee_part2));
    $("#fee_fee_amount").val(fee_part1 + fee_part2);

    this.validate_fee();
    this.validate_fee_details();
  },
  validate_fee : function() {
    part_amount1 = parseNumber($("input[name='fee[part_amount1]']").val());
    percent1 = parseNumber($("input[name='fee[percent1]']").val());
    var result1 = (part_amount1 == 0 && percent1 == 0) || (part_amount1 != 0 && percent1 != 0);
    if(result1) {
      changeClassToSuccess($("#fee_part1"));
      changeClassToSuccess($("input[name='fee[part_amount1]']"));
      changeClassToSuccess($("input[name='fee[percent1]']"));
    } else {
      changeClassToDanger($("#fee_part1"));
      changeClassToDanger($("input[name='fee[part_amount1]']"));
      changeClassToDanger($("input[name='fee[percent1]']"));
    }

    part_amount2 = parseNumber($("input[name='fee[part_amount2]']").val());
    percent2 = parseNumber($("input[name='fee[percent2]']").val());
    var result2 = (part_amount2 == 0 && percent2 == 0) || (part_amount2 != 0 && percent2 != 0);
    if(result2) {
      changeClassToSuccess($("#fee_part2"));
      changeClassToSuccess($("input[name='fee[part_amount2]']"));
      changeClassToSuccess($("input[name='fee[percent2]']"));
    } else {
      changeClassToDanger($("#fee_part2"));
      changeClassToDanger($("input[name='fee[part_amount2]']"));
      changeClassToDanger($("input[name='fee[percent2]']"));
    }

    return result1 && result2;
  },

  check_fee_details : function() {
    var sum = 0; 
    $("input[name^='fee[fee_details_attributes]'][name$='[fee_amount]']").each(function() {
      detail_amount = Number($(this).val());
      if(detail_amount)
        sum += detail_amount;
    }); 
    
    return sum == parseCurrency($("#fee_amount"));
  },
  validate_fee_details : function() {
    var result = this.check_fee_details();
    if(result) {
      changeClassToSuccess($("#fee_amount"));
      changeClassToSuccess($("input[name^='fee[fee_details_attributes]'][name$='[fee_amount]']"));
    } else {
      changeClassToDanger($("#fee_amount"));
      changeClassToDanger($("input[name^='fee[fee_details_attributes]'][name$='[fee_amount]']"));
    }
    return result;
  },
  validate_fee_details_available : function() {
    var result = true;
    $("input[name^='fee[fee_details_attributes]'][name$='[fee_amount]']").each(function() {
      detail_amount = Number($(this).val());
      if(detail_amount) {
        let income_amount_object = $(this).parents('tr').find('td.income_amount');
        let income_amount = parseCurrency(income_amount_object);
        let cost_amount_object = $(this).parents('tr').find('td.cost_amount');
        let cost_amount = parseCurrency(cost_amount_object);
        if(detail_amount > income_amount - cost_amount) {
          result = false;
          changeClassToDanger(income_amount_object);
          changeClassToDanger(cost_amount_object);
          changeClassToDanger($(this));
        }
      }
    }); 
    return result;
  },

  validate_form : function() {
     return (this.validate_income_amount() && this.validate_fee() && this.validate_fee_details() && this.validate_fee_details_available());
  },
}

$("#searchButton").click(function(){
  var params = {};
  params['begin_date'] = $('#fee_begin_date').val();
  params['end_date'] = $('#fee_end_date').val();
  location.href =  "<%= new_fee_path %>?" + $.param(params);
});

$("input[name='add_fee_detail']").click(function(){
  NestedAttr.add_or_destroy_fee_detail_input($(this));
  CalculateValidator.sum_income_amount();
  CalculateValidator.validate_income_amount();
});

$("input[name^='fee[part_amount']").change(function() {
     CalculateValidator.validate_income_amount();
     CalculateValidator.calculate_fee();
}); 

$("input[name^='fee[percent']").change(function() {
     CalculateValidator.calculate_fee();
}); 

$("#fee_details_table tbody").on("change", "input", function() {
  CalculateValidator.validate_fee_details();
  CalculateValidator.validate_fee_details_available();
}); 


$('form').on('submit', function() {
   return CalculateValidator.validate_form();
});

$(document).ready(function(){
  CalculateValidator.sum_income_amount();
  CalculateValidator.calculate_fee();
  CalculateValidator.validate_form();
});
</script>
